#!/home/nicolas/.conda/envs/hlmplay/bin/python 

import glob 
import pandas as pd 
from ifis_tools import series_tools as ser 
import argparse
#import geopandas as gp
import numpy as np
#import identify_events as ie 
#from scipy import stats
#perf = ser.performance()
from os.path import exists
#from sklearn.linear_model import HuberRegressor

##################################################################################################
#Parse arguments to the program
parser = argparse.ArgumentParser(description='creates a parquet file from the dat results file')
parser.add_argument('path_dats', type=str, help='path to the folder containing the dats generated by hlm')
parser.add_argument('path_out', type=str, help='path to the file with the processed data')
parser.add_argument('--replace','-r',  action='store_true', default = False,help='replace or not existing path_out')
#parser.add_argument('--gauges','-g', type = str, help = 'path to the csv file containing the gauges and their linkid')
args = parser.parse_args()

##################################################################################################
#Reads the results 

#Checvk if the file exists
if args.replace:
    print('going to overwrite the file')
if exists(args.path_out) is False or args.replace:

    #Read the usgs data to make the connection 
    #usgs = pd.read_csv(args.gauges)

    #function to read the list of dat files for an specific configuration
    def dat2df(path2dats):
        lista = glob.glob(path2dats+'*')        
        lista.sort()
        qs = []
        for l in lista:
            d = l.split('/')[-1].split('_')[0]
            d = d[:4]+'-'+d[4:6]+'-'+d[6:8]+ ' 00:00'
            qs.append(ser.read_dat_file(l, d))
        qs = pd.concat(qs)
        col = {}
        for c in qs.columns:
            col.update({c: str(c)})#usgs.loc[usgs.link == c,'STAID'].values[0]})
        qs.rename(columns=col, inplace = True)
        return qs
    
    q = dat2df(args.path_dats)
    q.to_parquet(args.path_out,compression='gzip')
    
